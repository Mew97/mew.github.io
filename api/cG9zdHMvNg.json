{"title":"mongoDB安装与pymongo的使用","date":"2020-03-13T05:22:48.000Z","date_formatted":{"ll":"2020年3月13日","L":"2020/03/13","MM-DD":"03-13"},"thumbnail":"img/img2/3_Jewel_4k.jpg","link":"posts/6","comments":true,"updated":"2020-03-16T15:26:24.768Z","content":"<p>基于Linux下使用docker-compose搭建mongoDB，以及一些简单使用的范例</p>\n<a id=\"more\"></a>\n\n<span style=\"font-size: 15px; font-weight: 500\">\n\n<h1 id=\"mongodb安装与pymongo的使用\">mongoDB安装与pymongo的使用<a href=\"#mongodb安装与pymongo的使用\" title=\"mongoDB安装与pymongo的使用\"></a></h1><h2 id=\"安装\">安装<a href=\"#安装\" title=\"安装\"></a></h2><p>推荐docker-compose安装：</p>\n<ul><li>环境需求：<ul><li>docker</li><li>docker-compose</li></ul></li><li>docker-compose文件</li></ul><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'2'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">mongo-container:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mongo:3.4</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">mongodb</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">MONGO_INITDB_ROOT_USERNAME=root</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">MONGO_INITDB_ROOT_PASSWORD=123456</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">\"27017:27017\"</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">\"./data/mongo:/data/db\"</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">\"./data/mongo-entrypoint/:/docker-entrypoint-initdb.d/\"</span> <span class=\"comment\"># 此配置可以自定义一些初始化命令</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> <span class=\"string\">mongod</span></span><br></pre></td></tr></table></figure>\n\n<ul><li>自定义一些初始化命令（可选）<ul><li>在./data/mongo-entrypoint目录下(上面配置里的路径对应)创建docker-entrypoint-initdb.sh（名字自起，.sh结尾即可）内容如下：</li><li>以下命令创建了hi数据库并且给该数据库分配了一个’test’用户</li></ul></li></ul><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/usr/bin/env bash</span></span><br><span class=\"line\">echo \"Creating mongo users...\"</span><br><span class=\"line\">mongo admin --host localhost -u root -p 123456 --eval \"db.createUser(&#123;user: 'admin', pwd: '123456', roles: [&#123;role: 'userAdminAnyDatabase', db: 'admin'&#125;]&#125;);\"</span><br><span class=\"line\">mongo admin -u root -p 123456 &lt;&lt; EOF</span><br><span class=\"line\">use hi</span><br><span class=\"line\">db.createUser(&#123;user: 'test', pwd: '123456', roles:[&#123;role:'readWrite',db:'hi'&#125;]&#125;)</span><br><span class=\"line\">EOF</span><br><span class=\"line\">echo \"Mongo users created.\"</span><br></pre></td></tr></table></figure>\n\n<ul><li>启动</li></ul><figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pymongo连接与使用\">pymongo连接与使用<a href=\"#pymongo连接与使用\" title=\"pymongo连接与使用\"></a></h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pymongo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 连接</span></span><br><span class=\"line\">client = pymongo.MongoClient(<span class=\"string\">\"mongodb://root:123456@jd:27017/admin\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mongoDB不用特意创建数据库与集合，当集合中首次插入数据时，他们自动的就创建了</span></span><br><span class=\"line\">db = client[<span class=\"string\">\"mydb\"</span>]  <span class=\"comment\"># 数据库</span></span><br><span class=\"line\">collect = db[<span class=\"string\">\"mycollect\"</span>]  <span class=\"comment\"># 集合</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除集合,当数据库下所有集合被删除时，数据库也自动删除了</span></span><br><span class=\"line\">collect.drop()</span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;</span><br><span class=\"line\">        <span class=\"string\">'name'</span>: <span class=\"string\">'Bob'</span></span><br><span class=\"line\">        <span class=\"string\">'age'</span>: <span class=\"string\">'12'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插入数据，返回数据的 _id 或者 [_id1,id2]</span></span><br><span class=\"line\">result = collect.insert(data)</span><br><span class=\"line\">result = collect.insert([data1,data2])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询</span></span><br><span class=\"line\">collect.find_one(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'Bob'</span>&#125;)</span><br><span class=\"line\">collect.find(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'Bob'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新</span></span><br><span class=\"line\">condition = &#123;<span class=\"string\">'name'</span>: <span class=\"string\">'Bob'</span>&#125;</span><br><span class=\"line\">student = collection.find_one(condition)</span><br><span class=\"line\">student[<span class=\"string\">'age'</span>] = <span class=\"number\">25</span></span><br><span class=\"line\">result = collection.update(condition, student)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除</span></span><br><span class=\"line\">result = collection.remove(&#123;<span class=\"string\">'name'</span>: <span class=\"string\">'Bob'</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul><li>更多详细用法 <a href=\"https://juejin.im/post/5addbd0e518825671f2f62ee\" target=\"_blank\">这里</a></li><li>文档：<ul><li><a href=\"https://api.mongodb.com/python/current/api/pymongo/collection.html\" target=\"_blank\">https://api.mongodb.com/python/current/api/pymongo/collection.html</a></li><li><a href=\"https://api.mongodb.com/python/current/api/pymongo/\" target=\"_blank\">https://api.mongodb.com/python/current/api/pymongo/</a></li></ul></li></ul></span>\n","prev":{"title":"Vue学习笔记","link":"posts/7"},"next":{"title":"关于nacos搭建与使用","link":"posts/2"},"plink":"https://mew.wiki.com/posts/6/","toc":[{"id":"mongodb安装与pymongo的使用","title":"mongoDB安装与pymongo的使用","index":"1","children":[{"id":"安装","title":"安装","index":"1.1"},{"id":"pymongo连接与使用","title":"pymongo连接与使用","index":"1.2"}]}]}